#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>
#include "./totem_key_position.h"
#include "./totem_macro.h"

&sk {
    release-after-ms = <200>;
    quick-release;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&mt {
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
};

// Layer
#define BASE 0
#define NAVI 1
#define SYMB 2

/ {
  behaviors {
    // Hold Tap
    IRONHEE_THUM_ROW(tht, &kp, &kp) // thumb keys
    IRONHEE_HOME_ROW(lht, &kp, &kp, R1_X R2_X R3_X LA_X LT_X) // left keys
    IRONHEE_HOME_ROW(rht, &kp, &kp, L1_X L2_X L3_X RA_X RT_X) // right keys
    // Morp Shift
    IRONHEE_MORP_SHIFT(COMMA_QMARK, &kp COMMA, &kp QMARK)
    IRONHEE_MORP_SHIFT(DOT_EXCL,    &kp DOT,   &kp EXCL)
    IRONHEE_MORP_SHIFT(FSLH_BSLH,   &kp FSLH,  &kp BSLH)
  };
  combos {
    compatible = "zmk,combos";
    // Left Hand Combo
    IRONHEE_COMBO_HORI(l_del,  L2_1 L2_2                , &lht LA(LCMD) DEL)
    IRONHEE_COMBO_HORI(l_tab,       L2_2 L2_3           , &lht LA(LCTL) TAB)
    IRONHEE_COMBO_HORI(l_ret,            L2_3 L2_4      , &lht LS(LCTL) RET)
    IRONHEE_COMBO_HORI(l_esc,       L2_2      L2_4      , &lht LA(LSHFT) ESC)
    IRONHEE_COMBO_HORI(l_bspc,                L2_4 L2_5 , &kp BSPC)
    // Right Hand Combos
    IRONHEE_COMBO_HORI(r_lang,      R2_4 R2_3           , &rht LS(LCTL) LC(SPACE))
    IRONHEE_COMBO_HORI(r_caps,           R2_3 R2_2      , &rht LA(LCTL) CAPS)
    // Thumb, Addon Combos
    IRONHEE_COMBO_HORI(a_lcup, LA_1 LT_1 , &kp LC(UP))
  };
  keymap {
    compatible = "zmk,keymap";
    base_layer {
      label = "BASE";
      bindings = <
        &kp Q        &kp W       &kp E         &kp R        &kp T          /*=*/ &kp Y     &kp U         &kp I          &kp O       &kp P
        &lht LCMD A  &lht LALT S &lht LCTL D   &lht LSHFT F &kp G          /*=*/ &kp H     &rht LSHFT J  &rht LCTL K    &rht LALT L &rht LCMD SEMI
        &kp Z        &kp X       &kp C         &kp V        &kp B          /*=*/ &kp N     &kp M         &COMMA_QMARK   &DOT_EXCL   &kp APOS
        &kp LC(LEFT) &none       &kp LC(RIGHT) &sk LCMD     &lt NAVI SPACE /*=*/ &sk LSHFT &lt SYMB BSPC &kp C_PP       &none       &FSLH_BSLH
      >;
    };
    navi_layer {
      label = "NAVI";
      bindings = <
        &kp N0       &kp N7       &kp N8       &kp N9        &trans /*=*/ &trans &kp LA(LEFT)    &kp LA(DOWN)   &kp LA(UP)   &kp LA(RIGHT)
        &lht LCMD N0 &lht LALT N4 &lht LCTL N5 &lht LSHFT N6 &trans /*=*/ &trans &rht LSHFT LEFT &rht LCTL DOWN &rht LALT UP &rht LCMD RIGHT
        &kp N0       &kp N1       &kp N2       &kp N3        &trans /*=*/ &trans &kp HOME        &kp PG_DN      &kp PG_UP    &kp END
        &trans       &none        &trans       &trans        &trans /*=*/ &trans &trans          &trans         &none        &trans
      >;
    };
    symb_layer {
      label = "SYMB";
      bindings = <
        &trans          &kp PIPE        &kp AMPS       &trans           &trans /* */ &trans    &kp GRAVE       &kp CARET      &kp DLLR       &kp BSLH
        &lht LCMD TILDE &lht LALT MINUS &lht LCTL PLUS &lht LSHFT EQUAL &kp AT /* */ &kp PRCNT &rht LSHFT LBRC &rht LCTL LBKT &rht LALT RBKT &rht LCMD RBRC
        &kp HASH        &kp FSLH        &kp STAR       &kp UNDER        &trans /* */ &trans    &kp LPAR        &kp LT         &kp GT         &kp RPAR
        &trans          &none           &trans         &trans           &trans /* */ &trans    &trans          &trans         &none          &trans
      >;
    };
  };
};
